# coding: utf-8

"""
    Sage Business Cloud Accounting - Accounts

    Documentation of the Sage Business Cloud Accounting API.  # noqa: E501

    The version of the OpenAPI document: 3.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import sage
from sage.models.put_financial_settings import PutFinancialSettings  # noqa: E501
from sage.rest import ApiException

class TestPutFinancialSettings(unittest.TestCase):
    """PutFinancialSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PutFinancialSettings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = sage.models.put_financial_settings.PutFinancialSettings()  # noqa: E501
        if include_optional :
            return PutFinancialSettings(
                financial_settings = sage.models.put_financial_settings_financial_settings.putFinancialSettings_financial_settings(
                    year_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    year_end_lockdown_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    accounting_type = '0', 
                    accounts_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    base_currency_id = '0', 
                    multi_currency_enabled = True, 
                    use_live_exchange_rates = True, 
                    mtd_activation_status = '0', 
                    mtd_connected = True, 
                    mtd_authenticated_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    tax_scheme_id = '0', 
                    tax_return_frequency_id = '0', 
                    tax_number = '0', 
                    general_tax_number = '0', 
                    tax_office_id = '0', 
                    default_irpf_rate = 1.337, 
                    flat_rate_tax_percentage = 1.337, 
                    recoverable_percentage = 1.337, 
                    sales_tax_calculation = '0', 
                    purchase_tax_calculation = '0', )
            )
        else :
            return PutFinancialSettings(
                financial_settings = sage.models.put_financial_settings_financial_settings.putFinancialSettings_financial_settings(
                    year_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    year_end_lockdown_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    accounting_type = '0', 
                    accounts_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    base_currency_id = '0', 
                    multi_currency_enabled = True, 
                    use_live_exchange_rates = True, 
                    mtd_activation_status = '0', 
                    mtd_connected = True, 
                    mtd_authenticated_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    tax_scheme_id = '0', 
                    tax_return_frequency_id = '0', 
                    tax_number = '0', 
                    general_tax_number = '0', 
                    tax_office_id = '0', 
                    default_irpf_rate = 1.337, 
                    flat_rate_tax_percentage = 1.337, 
                    recoverable_percentage = 1.337, 
                    sales_tax_calculation = '0', 
                    purchase_tax_calculation = '0', ),
        )

    def testPutFinancialSettings(self):
        """Test PutFinancialSettings"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
