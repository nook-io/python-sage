# coding: utf-8

"""
    Sage Business Cloud Accounting - Accounts

    Documentation of the Sage Business Cloud Accounting API.  # noqa: E501

    The version of the OpenAPI document: 3.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import sage
from sage.models.contact_allocation import ContactAllocation  # noqa: E501
from sage.rest import ApiException

class TestContactAllocation(unittest.TestCase):
    """ContactAllocation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ContactAllocation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = sage.models.contact_allocation.ContactAllocation()  # noqa: E501
        if include_optional :
            return ContactAllocation(
                id = '0', 
                displayed_as = '0', 
                path = '0', 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                links = [
                    sage.models.link.Link(
                        href = '0', 
                        rel = '0', 
                        type = '0', )
                    ], 
                transaction = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                transaction_type = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                contact = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                allocated_artefacts = [
                    sage.models.allocated_artefact.AllocatedArtefact(
                        id = '0', 
                        artefact = sage.models.generic.Generic(
                            id = '0', 
                            displayed_as = '0', 
                            __path = '0', 
                            links = [
                                sage.models.link.Link(
                                    href = '0', 
                                    rel = '0', 
                                    type = '0', )
                                ], ), 
                        amount = 1.337, )
                    ]
            )
        else :
            return ContactAllocation(
        )

    def testContactAllocation(self):
        """Test ContactAllocation"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
