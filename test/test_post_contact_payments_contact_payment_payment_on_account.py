# coding: utf-8

"""
    Sage Business Cloud Accounting - Accounts

    Documentation of the Sage Business Cloud Accounting API.  # noqa: E501

    The version of the OpenAPI document: 3.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import sage
from sage.models.post_contact_payments_contact_payment_payment_on_account import PostContactPaymentsContactPaymentPaymentOnAccount  # noqa: E501
from sage.rest import ApiException

class TestPostContactPaymentsContactPaymentPaymentOnAccount(unittest.TestCase):
    """PostContactPaymentsContactPaymentPaymentOnAccount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PostContactPaymentsContactPaymentPaymentOnAccount
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = sage.models.post_contact_payments_contact_payment_payment_on_account.PostContactPaymentsContactPaymentPaymentOnAccount()  # noqa: E501
        if include_optional :
            return PostContactPaymentsContactPaymentPaymentOnAccount(
                contact_name = '0', 
                contact_reference = '0', 
                contact_id = '0', 
                date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                reference = '0', 
                net_amount = 1.337, 
                tax_amount = 1.337, 
                total_amount = 1.337, 
                outstanding_amount = 1.337, 
                currency_id = '0', 
                exchange_rate = 1.337, 
                base_currency_net_amount = 1.337, 
                base_currency_tax_amount = 1.337, 
                base_currency_total_amount = 1.337, 
                base_currency_outstanding_amount = 1.337, 
                status_id = '0'
            )
        else :
            return PostContactPaymentsContactPaymentPaymentOnAccount(
        )

    def testPostContactPaymentsContactPaymentPaymentOnAccount(self):
        """Test PostContactPaymentsContactPaymentPaymentOnAccount"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
