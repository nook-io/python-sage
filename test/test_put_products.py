# coding: utf-8

"""
    Sage Business Cloud Accounting - Accounts

    Documentation of the Sage Business Cloud Accounting API.  # noqa: E501

    The version of the OpenAPI document: 3.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import sage
from sage.models.put_products import PutProducts  # noqa: E501
from sage.rest import ApiException

class TestPutProducts(unittest.TestCase):
    """PutProducts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PutProducts
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = sage.models.put_products.PutProducts()  # noqa: E501
        if include_optional :
            return PutProducts(
                product = sage.models.put_products_product.putProducts_product(
                    description = '0', 
                    sales_ledger_account_id = '0', 
                    purchase_ledger_account_id = '0', 
                    item_code = '0', 
                    notes = '0', 
                    sales_tax_rate_id = '0', 
                    usual_supplier_id = '0', 
                    purchase_tax_rate_id = '0', 
                    cost_price = 1.337, 
                    source_guid = '0', 
                    purchase_description = '0', 
                    active = True, 
                    catalog_item_type_id = '0', 
                    sales_prices = [
                        sage.models.post_products_product_sales_prices.postProducts_product_sales_prices(
                            price_name = '0', 
                            price = 1.337, 
                            price_includes_tax = True, 
                            product_sales_price_type_id = '0', )
                        ], )
            )
        else :
            return PutProducts(
                product = sage.models.put_products_product.putProducts_product(
                    description = '0', 
                    sales_ledger_account_id = '0', 
                    purchase_ledger_account_id = '0', 
                    item_code = '0', 
                    notes = '0', 
                    sales_tax_rate_id = '0', 
                    usual_supplier_id = '0', 
                    purchase_tax_rate_id = '0', 
                    cost_price = 1.337, 
                    source_guid = '0', 
                    purchase_description = '0', 
                    active = True, 
                    catalog_item_type_id = '0', 
                    sales_prices = [
                        sage.models.post_products_product_sales_prices.postProducts_product_sales_prices(
                            price_name = '0', 
                            price = 1.337, 
                            price_includes_tax = True, 
                            product_sales_price_type_id = '0', )
                        ], ),
        )

    def testPutProducts(self):
        """Test PutProducts"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
