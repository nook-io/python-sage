# coding: utf-8

"""
    Sage Business Cloud Accounting - Accounts

    Documentation of the Sage Business Cloud Accounting API.  # noqa: E501

    The version of the OpenAPI document: 3.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import sage
from sage.models.default_ledger_accounts import DefaultLedgerAccounts  # noqa: E501
from sage.rest import ApiException

class TestDefaultLedgerAccounts(unittest.TestCase):
    """DefaultLedgerAccounts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DefaultLedgerAccounts
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = sage.models.default_ledger_accounts.DefaultLedgerAccounts()  # noqa: E501
        if include_optional :
            return DefaultLedgerAccounts(
                bank_charges_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                bank_interest_received_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                bank_interest_charges_paid_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                exchange_rate_gains_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                exchange_rate_losses_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                sales_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                sales_discount_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                purchase_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                purchase_discount_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                product_sales_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                product_purchase_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                service_sales_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                service_purchase_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                stock_purchase_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                other_receipt_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                other_payment_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                customer_receipt_discount_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                vendor_payment_discount_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                carriage_ledger_account = sage.models.base.Base(
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', )
            )
        else :
            return DefaultLedgerAccounts(
        )

    def testDefaultLedgerAccounts(self):
        """Test DefaultLedgerAccounts"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
